// Code generated by 'ccgo signal/gen.c -crt-import-path "" -export-defines "" -export-enums "" -export-externs X -export-fields F -export-structs "" -export-typedefs "" -header -hide _OSSwapInt16,_OSSwapInt32,_OSSwapInt64 -ignore-unsupported-alignment -o signal/signal_freebsd_amd64.go -pkgname signal', DO NOT EDIT.

package signal

import (
	"math"
	"reflect"
	"sync/atomic"
	"unsafe"
)

var _ = math.Pi
var _ reflect.Kind
var _ atomic.Value
var _ unsafe.Pointer

const (
	BUS_ADRALN             = 1
	BUS_ADRERR             = 2
	BUS_OBJERR             = 3
	BUS_OOMERR             = 100
	CLD_CONTINUED          = 6
	CLD_DUMPED             = 3
	CLD_EXITED             = 1
	CLD_KILLED             = 2
	CLD_STOPPED            = 5
	CLD_TRAPPED            = 4
	FPE_FLTDIV             = 3
	FPE_FLTINV             = 7
	FPE_FLTOVF             = 4
	FPE_FLTRES             = 6
	FPE_FLTSUB             = 8
	FPE_FLTUND             = 5
	FPE_INTDIV             = 2
	FPE_INTOVF             = 1
	ILL_BADSTK             = 8
	ILL_COPROC             = 7
	ILL_ILLADR             = 3
	ILL_ILLOPC             = 1
	ILL_ILLOPN             = 2
	ILL_ILLTRP             = 4
	ILL_PRVOPC             = 5
	ILL_PRVREG             = 6
	MINSIGSTKSZ            = 2048
	NSIG                   = 32
	POLL_ERR               = 4
	POLL_HUP               = 6
	POLL_IN                = 1
	POLL_MSG               = 3
	POLL_OUT               = 2
	POLL_PRI               = 5
	SA_NOCLDSTOP           = 0x0008
	SA_NOCLDWAIT           = 0x0020
	SA_NODEFER             = 0x0010
	SA_ONSTACK             = 0x0001
	SA_RESETHAND           = 0x0004
	SA_RESTART             = 0x0002
	SA_SIGINFO             = 0x0040
	SEGV_ACCERR            = 2
	SEGV_MAPERR            = 1
	SEGV_PKUERR            = 100
	SIGABRT                = 6
	SIGALRM                = 14
	SIGBUS                 = 10
	SIGCHLD                = 20
	SIGCONT                = 19
	SIGEMT                 = 7
	SIGEV_KEVENT           = 3
	SIGEV_NONE             = 0
	SIGEV_SIGNAL           = 1
	SIGEV_THREAD           = 2
	SIGEV_THREAD_ID        = 4
	SIGFPE                 = 8
	SIGHUP                 = 1
	SIGILL                 = 4
	SIGINFO                = 29
	SIGINT                 = 2
	SIGIO                  = 23
	SIGIOT                 = 6
	SIGKILL                = 9
	SIGLIBRT               = 33
	SIGLWP                 = 32
	SIGPIPE                = 13
	SIGPROF                = 27
	SIGQUIT                = 3
	SIGRTMAX               = 126
	SIGRTMIN               = 65
	SIGSEGV                = 11
	SIGSTKSZ               = 34816
	SIGSTOP                = 17
	SIGSYS                 = 12
	SIGTERM                = 15
	SIGTHR                 = 32
	SIGTRAP                = 5
	SIGTSTP                = 18
	SIGTTIN                = 21
	SIGTTOU                = 22
	SIGURG                 = 16
	SIGUSR1                = 30
	SIGUSR2                = 31
	SIGVTALRM              = 26
	SIGWINCH               = 28
	SIGXCPU                = 24
	SIGXFSZ                = 25
	SIG_BLOCK              = 1
	SIG_SETMASK            = 3
	SIG_UNBLOCK            = 2
	SI_ASYNCIO             = 0x10004
	SI_KERNEL              = 0x10006
	SI_LWP                 = 0x10007
	SI_MESGQ               = 0x10005
	SI_NOINFO              = 0
	SI_QUEUE               = 0x10002
	SI_TIMER               = 0x10003
	SI_UNDEFINED           = 0
	SI_USER                = 0x10001
	SS_DISABLE             = 0x0004
	SS_ONSTACK             = 0x0001
	SV_INTERRUPT           = 2
	SV_NOCLDSTOP           = 8
	SV_NODEFER             = 16
	SV_ONSTACK             = 1
	SV_RESETHAND           = 4
	SV_SIGINFO             = 64
	TRAP_BRKPT             = 1
	TRAP_CAP               = 4
	TRAP_DTRACE            = 3
	TRAP_TRACE             = 2
	X_FILE_OFFSET_BITS     = 64
	X_LP64                 = 1
	X_MACHINE__LIMITS_H_   = 0
	X_MACHINE__TYPES_H_    = 0
	X_MC_FLAG_MASK         = 7
	X_MC_FPFMT_NODEV       = 0x10000
	X_MC_FPFMT_XMM         = 0x10002
	X_MC_FPOWNED_FPU       = 0x20001
	X_MC_FPOWNED_NONE      = 0x20000
	X_MC_FPOWNED_PCB       = 0x20002
	X_MC_HASBASES          = 0x2
	X_MC_HASFPXSTATE       = 0x4
	X_MC_HASSEGS           = 0x1
	X_Nonnull              = 0
	X_Null_unspecified     = 0
	X_Nullable             = 0
	X_PID_T_DECLARED       = 0
	X_PTHREAD_T_DECLARED   = 0
	X_SIGNAL_H_            = 0
	X_SIGSET_T_DECLARED    = 0
	X_SIG_MAXSIG           = 128
	X_SIG_WORDS            = 4
	X_SIZE_T_DECLARED      = 0
	X_SYS_CDEFS_H_         = 0
	X_SYS_SIGNAL_H_        = 0
	X_SYS__PTHREADTYPES_H_ = 0
	X_SYS__SIGSET_H_       = 0
	X_SYS__TIMESPEC_H_     = 0
	X_SYS__TYPES_H_        = 0
	X_SYS__UCONTEXT_H_     = 0
	X_TIME_T_DECLARED      = 0
	X_UID_T_DECLARED       = 0
	X_X86_SIGNAL_H         = 1
	X_X86_UCONTEXT_H_      = 0
	Unix                   = 1
)

type Ptrdiff_t = int64

type Size_t = uint64

type Wchar_t = int32

type X__int128_t = struct {
	Flo int64
	Fhi int64
}
type X__uint128_t = struct {
	Flo uint64
	Fhi uint64
}

type X__builtin_va_list = uintptr
type X__float128 = float64

type X__int8_t = int8
type X__uint8_t = uint8
type X__int16_t = int16
type X__uint16_t = uint16
type X__int32_t = int32
type X__uint32_t = uint32
type X__int64_t = int64
type X__uint64_t = uint64

type X__clock_t = X__int32_t
type X__critical_t = X__int64_t
type X__double_t = float64
type X__float_t = float32
type X__intfptr_t = X__int64_t
type X__intptr_t = X__int64_t
type X__intmax_t = X__int64_t
type X__int_fast8_t = X__int32_t
type X__int_fast16_t = X__int32_t
type X__int_fast32_t = X__int32_t
type X__int_fast64_t = X__int64_t
type X__int_least8_t = X__int8_t
type X__int_least16_t = X__int16_t
type X__int_least32_t = X__int32_t
type X__int_least64_t = X__int64_t
type X__ptrdiff_t = X__int64_t
type X__register_t = X__int64_t
type X__segsz_t = X__int64_t
type X__size_t = X__uint64_t
type X__ssize_t = X__int64_t
type X__time_t = X__int64_t
type X__uintfptr_t = X__uint64_t
type X__uintptr_t = X__uint64_t
type X__uintmax_t = X__uint64_t
type X__uint_fast8_t = X__uint32_t
type X__uint_fast16_t = X__uint32_t
type X__uint_fast32_t = X__uint32_t
type X__uint_fast64_t = X__uint64_t
type X__uint_least8_t = X__uint8_t
type X__uint_least16_t = X__uint16_t
type X__uint_least32_t = X__uint32_t
type X__uint_least64_t = X__uint64_t
type X__u_register_t = X__uint64_t
type X__vm_offset_t = X__uint64_t
type X__vm_paddr_t = X__uint64_t
type X__vm_size_t = X__uint64_t
type X___wchar_t = int32

type X__blksize_t = X__int32_t
type X__blkcnt_t = X__int64_t
type X__clockid_t = X__int32_t
type X__fflags_t = X__uint32_t
type X__fsblkcnt_t = X__uint64_t
type X__fsfilcnt_t = X__uint64_t
type X__gid_t = X__uint32_t
type X__id_t = X__int64_t
type X__ino_t = X__uint64_t
type X__key_t = int64
type X__lwpid_t = X__int32_t
type X__mode_t = X__uint16_t
type X__accmode_t = int32
type X__nl_item = int32
type X__nlink_t = X__uint64_t
type X__off_t = X__int64_t
type X__off64_t = X__int64_t
type X__pid_t = X__int32_t
type X__rlim_t = X__int64_t

type X__sa_family_t = X__uint8_t
type X__socklen_t = X__uint32_t
type X__suseconds_t = int64
type X__timer_t = uintptr
type X__mqd_t = uintptr
type X__uid_t = X__uint32_t
type X__useconds_t = uint32
type X__cpuwhich_t = int32
type X__cpulevel_t = int32
type X__cpusetid_t = int32
type X__daddr_t = X__int64_t

type X__ct_rune_t = int32
type X__rune_t = X__ct_rune_t
type X__wint_t = X__ct_rune_t

type X__char16_t = X__uint_least16_t
type X__char32_t = X__uint_least32_t

type X__max_align_t = struct {
	F__max_align1 int64
	F__max_align2 float64
}

type X__dev_t = X__uint64_t

type X__fixpt_t = X__uint32_t

type X__mbstate_t = struct {
	F__ccgo_pad1 [0]uint64
	F__mbstate8  [128]int8
}

type X__rman_res_t = X__uintmax_t

type X__va_list = X__builtin_va_list
type X__gnuc_va_list = X__va_list

type X__sigset = struct{ F__bits [4]X__uint32_t }

type X__sigset_t = X__sigset

type Sig_atomic_t = int64

type Sigcontext = struct {
	Fsc_mask          struct{ F__bits [4]X__uint32_t }
	Fsc_onstack       int64
	Fsc_rdi           int64
	Fsc_rsi           int64
	Fsc_rdx           int64
	Fsc_rcx           int64
	Fsc_r8            int64
	Fsc_r9            int64
	Fsc_rax           int64
	Fsc_rbx           int64
	Fsc_rbp           int64
	Fsc_r10           int64
	Fsc_r11           int64
	Fsc_r12           int64
	Fsc_r13           int64
	Fsc_r14           int64
	Fsc_r15           int64
	Fsc_trapno        int32
	Fsc_fs            int16
	Fsc_gs            int16
	Fsc_addr          int64
	Fsc_flags         int32
	Fsc_es            int16
	Fsc_ds            int16
	Fsc_err           int64
	Fsc_rip           int64
	Fsc_cs            int64
	Fsc_rflags        int64
	Fsc_rsp           int64
	Fsc_ss            int64
	Fsc_len           int64
	Fsc_fpformat      int64
	Fsc_ownedfp       int64
	Fsc_fpstate       [64]int64
	Fsc_fsbase        int64
	Fsc_gsbase        int64
	Fsc_xfpustate     int64
	Fsc_xfpustate_len int64
	Fsc_spare         [4]int64
}

type Pthread_once = struct {
	Fstate       int32
	F__ccgo_pad1 [4]byte
	Fmutex       Pthread_mutex_t
}

type Pthread_t = uintptr
type Pthread_attr_t = uintptr
type Pthread_mutex_t = uintptr
type Pthread_mutexattr_t = uintptr
type Pthread_cond_t = uintptr
type Pthread_condattr_t = uintptr
type Pthread_key_t = int32
type Pthread_once_t = Pthread_once
type Pthread_rwlock_t = uintptr
type Pthread_rwlockattr_t = uintptr
type Pthread_barrier_t = uintptr
type Pthread_barrierattr_t = uintptr
type Pthread_spinlock_t = uintptr

type Pthread_addr_t = uintptr
type Pthread_startroutine_t = uintptr

type Time_t = X__time_t

type Timespec = struct {
	Ftv_sec  Time_t
	Ftv_nsec int64
}

type Uid_t = X__uid_t

type Sigset_t = X__sigset_t

type Sigval = struct {
	F__ccgo_pad1 [0]uint64
	Fsival_int   int32
	F__ccgo_pad2 [4]byte
}

type Sigevent = struct {
	Fsigev_notify int32
	Fsigev_signo  int32
	Fsigev_value  struct {
		F__ccgo_pad1 [0]uint64
		Fsival_int   int32
		F__ccgo_pad2 [4]byte
	}
	F_sigev_un struct {
		F__ccgo_pad1 [0]uint64
		F_threadid   X__lwpid_t
		F__ccgo_pad2 [60]byte
	}
}

type X__siginfo = struct {
	Fsi_signo  int32
	Fsi_errno  int32
	Fsi_code   int32
	Fsi_pid    X__pid_t
	Fsi_uid    X__uid_t
	Fsi_status int32
	Fsi_addr   uintptr
	Fsi_value  struct {
		F__ccgo_pad1 [0]uint64
		Fsival_int   int32
		F__ccgo_pad2 [4]byte
	}
	F_reason struct {
		F__ccgo_pad1 [0]uint64
		F_fault      struct{ F_trapno int32 }
		F__ccgo_pad2 [36]byte
	}
}

type Siginfo_t = X__siginfo

type Sigaction = struct {
	F__sigaction_u struct{ F__sa_handler uintptr }
	Fsa_flags      int32
	Fsa_mask       Sigset_t
	F__ccgo_pad1   [4]byte
}

type Sig_t = uintptr

type Sigaltstack = struct {
	Fss_sp       uintptr
	Fss_size     X__size_t
	Fss_flags    int32
	F__ccgo_pad1 [4]byte
}

type Stack_t = Sigaltstack

type Sigvec = struct {
	Fsv_handler uintptr
	Fsv_mask    int32
	Fsv_flags   int32
}

type Sigstack = struct {
	Fss_sp       uintptr
	Fss_onstack  int32
	F__ccgo_pad1 [4]byte
}

type X__mcontext = struct {
	Fmc_onstack       X__register_t
	Fmc_rdi           X__register_t
	Fmc_rsi           X__register_t
	Fmc_rdx           X__register_t
	Fmc_rcx           X__register_t
	Fmc_r8            X__register_t
	Fmc_r9            X__register_t
	Fmc_rax           X__register_t
	Fmc_rbx           X__register_t
	Fmc_rbp           X__register_t
	Fmc_r10           X__register_t
	Fmc_r11           X__register_t
	Fmc_r12           X__register_t
	Fmc_r13           X__register_t
	Fmc_r14           X__register_t
	Fmc_r15           X__register_t
	Fmc_trapno        X__uint32_t
	Fmc_fs            X__uint16_t
	Fmc_gs            X__uint16_t
	Fmc_addr          X__register_t
	Fmc_flags         X__uint32_t
	Fmc_es            X__uint16_t
	Fmc_ds            X__uint16_t
	Fmc_err           X__register_t
	Fmc_rip           X__register_t
	Fmc_cs            X__register_t
	Fmc_rflags        X__register_t
	Fmc_rsp           X__register_t
	Fmc_ss            X__register_t
	Fmc_len           int64
	Fmc_fpformat      int64
	Fmc_ownedfp       int64
	Fmc_fpstate       [64]int64
	Fmc_fsbase        X__register_t
	Fmc_gsbase        X__register_t
	Fmc_xfpustate     X__register_t
	Fmc_xfpustate_len X__register_t
	Fmc_spare         [4]int64
}

type Mcontext_t = X__mcontext

type X__ucontext = struct {
	Fuc_sigmask  X__sigset_t
	Fuc_mcontext Mcontext_t
	Fuc_link     uintptr
	Fuc_stack    struct {
		Fss_sp       uintptr
		Fss_size     X__size_t
		Fss_flags    int32
		F__ccgo_pad1 [4]byte
	}
	Fuc_flags    int32
	F__spare__   [4]int32
	F__ccgo_pad1 [4]byte
}

type Ucontext_t = X__ucontext

type Pid_t = X__pid_t
type X__pthread_t = uintptr

var _ int8
