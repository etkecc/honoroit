// Code generated by 'ccgo signal/gen.c -crt-import-path "" -export-defines "" -export-enums "" -export-externs X -export-fields F -export-structs "" -export-typedefs "" -header -hide _OSSwapInt16,_OSSwapInt32,_OSSwapInt64 -ignore-unsupported-alignment -o signal/signal_linux_ppc64le.go -pkgname signal', DO NOT EDIT.

package signal

import (
	"math"
	"reflect"
	"sync/atomic"
	"unsafe"
)

var _ = math.Pi
var _ reflect.Kind
var _ atomic.Value
var _ unsafe.Pointer

const (
	AT_DCACHEBSIZE                      = 19
	AT_ICACHEBSIZE                      = 20
	AT_IGNOREPPC                        = 22
	AT_L1D_CACHEGEOMETRY                = 43
	AT_L1D_CACHESIZE                    = 42
	AT_L1I_CACHEGEOMETRY                = 41
	AT_L1I_CACHESIZE                    = 40
	AT_L2_CACHEGEOMETRY                 = 45
	AT_L2_CACHESIZE                     = 44
	AT_L3_CACHEGEOMETRY                 = 47
	AT_L3_CACHESIZE                     = 46
	AT_SYSINFO_EHDR                     = 33
	AT_UCACHEBSIZE                      = 21
	AT_VECTOR_SIZE_ARCH                 = 14
	ELF_NEBB                            = 3
	ELF_NFPREG                          = 33
	ELF_NGREG                           = 48
	ELF_NPKEY                           = 3
	ELF_NPMU                            = 5
	ELF_NTMSPRREG                       = 3
	ELF_NVMX                            = 34
	ELF_NVRREG                          = 34
	ELF_NVRREG32                        = 33
	ELF_NVSRHALFREG                     = 32
	ELF_NVSX                            = 32
	MINSIGSTKSZ                         = 4096
	NFPREG                              = 33
	NGREG                               = 48
	NSIG                                = 65
	NVRREG                              = 34
	PPC_BREAKPOINT_CONDITION_AND        = 0x00000001
	PPC_BREAKPOINT_CONDITION_AND_OR     = 0x00000003
	PPC_BREAKPOINT_CONDITION_BE_ALL     = 0x00ff0000
	PPC_BREAKPOINT_CONDITION_BE_SHIFT   = 16
	PPC_BREAKPOINT_CONDITION_EXACT      = 1
	PPC_BREAKPOINT_CONDITION_MODE       = 0x00000003
	PPC_BREAKPOINT_CONDITION_NONE       = 0x00000000
	PPC_BREAKPOINT_CONDITION_OR         = 0x00000002
	PPC_BREAKPOINT_MODE_EXACT           = 0x00000000
	PPC_BREAKPOINT_MODE_MASK            = 0x00000003
	PPC_BREAKPOINT_MODE_RANGE_EXCLUSIVE = 0x00000002
	PPC_BREAKPOINT_MODE_RANGE_INCLUSIVE = 0x00000001
	PPC_BREAKPOINT_TRIGGER_EXECUTE      = 0x00000001
	PPC_BREAKPOINT_TRIGGER_READ         = 0x00000002
	PPC_BREAKPOINT_TRIGGER_RW           = 6
	PPC_BREAKPOINT_TRIGGER_WRITE        = 0x00000004
	PPC_DEBUG_FEATURE_DATA_BP_ARCH_31   = 0x0000000000000020
	PPC_DEBUG_FEATURE_DATA_BP_DAWR      = 0x0000000000000010
	PPC_DEBUG_FEATURE_DATA_BP_MASK      = 0x0000000000000008
	PPC_DEBUG_FEATURE_DATA_BP_RANGE     = 0x0000000000000004
	PPC_DEBUG_FEATURE_INSN_BP_MASK      = 0x0000000000000002
	PPC_DEBUG_FEATURE_INSN_BP_RANGE     = 0x0000000000000001
	PPC_FEATURE2_ARCH_2_07              = 0x80000000
	PPC_FEATURE2_ARCH_3_00              = 0x00800000
	PPC_FEATURE2_ARCH_3_1               = 0x00040000
	PPC_FEATURE2_DARN                   = 0x00200000
	PPC_FEATURE2_DSCR                   = 0x20000000
	PPC_FEATURE2_EBB                    = 0x10000000
	PPC_FEATURE2_HAS_IEEE128            = 0x00400000
	PPC_FEATURE2_HTM                    = 0x40000000
	PPC_FEATURE2_HTM_NOSC               = 0x01000000
	PPC_FEATURE2_HTM_NO_SUSPEND         = 0x00080000
	PPC_FEATURE2_ISEL                   = 0x08000000
	PPC_FEATURE2_MMA                    = 0x00020000
	PPC_FEATURE2_SCV                    = 0x00100000
	PPC_FEATURE2_TAR                    = 0x04000000
	PPC_FEATURE2_VEC_CRYPTO             = 0x02000000
	PPC_FEATURE_32                      = 0x80000000
	PPC_FEATURE_601_INSTR               = 0x20000000
	PPC_FEATURE_64                      = 0x40000000
	PPC_FEATURE_ARCH_2_05               = 0x00001000
	PPC_FEATURE_ARCH_2_06               = 0x00000100
	PPC_FEATURE_BOOKE                   = 0x00008000
	PPC_FEATURE_CELL                    = 0x00010000
	PPC_FEATURE_HAS_4xxMAC              = 0x02000000
	PPC_FEATURE_HAS_ALTIVEC             = 0x10000000
	PPC_FEATURE_HAS_DFP                 = 0x00000400
	PPC_FEATURE_HAS_EFP_DOUBLE          = 0x00200000
	PPC_FEATURE_HAS_EFP_SINGLE          = 0x00400000
	PPC_FEATURE_HAS_FPU                 = 0x08000000
	PPC_FEATURE_HAS_MMU                 = 0x04000000
	PPC_FEATURE_HAS_SPE                 = 0x00800000
	PPC_FEATURE_HAS_VSX                 = 0x00000080
	PPC_FEATURE_ICACHE_SNOOP            = 0x00002000
	PPC_FEATURE_NO_TB                   = 0x00100000
	PPC_FEATURE_PA6T                    = 0x00000800
	PPC_FEATURE_POWER4                  = 0x00080000
	PPC_FEATURE_POWER5                  = 0x00040000
	PPC_FEATURE_POWER5_PLUS             = 0x00020000
	PPC_FEATURE_POWER6_EXT              = 0x00000200
	PPC_FEATURE_PPC_LE                  = 0x00000001
	PPC_FEATURE_PSERIES_PERFMON_COMPAT  = 0x00000040
	PPC_FEATURE_SMT                     = 0x00004000
	PPC_FEATURE_TRUE_LE                 = 0x00000002
	PPC_FEATURE_UNIFIED_CACHE           = 0x01000000
	PPC_PTRACE_DELHWDEBUG               = 0x87
	PPC_PTRACE_GETHWDBGINFO             = 0x89
	PPC_PTRACE_PEEKDATA_3264            = 0x94
	PPC_PTRACE_PEEKTEXT_3264            = 0x95
	PPC_PTRACE_PEEKUSR_3264             = 0x91
	PPC_PTRACE_POKEDATA_3264            = 0x92
	PPC_PTRACE_POKETEXT_3264            = 0x93
	PPC_PTRACE_POKEUSR_3264             = 0x90
	PPC_PTRACE_SETHWDEBUG               = 0x88
	PTRACE_GETEVRREGS                   = 0x14
	PTRACE_GETFPREGS                    = 0xe
	PTRACE_GETREGS                      = 0xc
	PTRACE_GETREGS64                    = 0x16
	PTRACE_GETVRREGS                    = 0x12
	PTRACE_GETVSRREGS                   = 0x1b
	PTRACE_GET_DEBUGREG                 = 0x19
	PTRACE_SETEVRREGS                   = 0x15
	PTRACE_SETFPREGS                    = 0xf
	PTRACE_SETREGS                      = 0xd
	PTRACE_SETREGS64                    = 0x17
	PTRACE_SETVRREGS                    = 0x13
	PTRACE_SETVSRREGS                   = 0x1c
	PTRACE_SET_DEBUGREG                 = 0x1a
	PTRACE_SINGLEBLOCK                  = 0x100
	PTRACE_SYSEMU                       = 0x1d
	PTRACE_SYSEMU_SINGLESTEP            = 0x1e
	PT_CCR                              = 38
	PT_CTR                              = 35
	PT_DAR                              = 41
	PT_DSCR                             = 44
	PT_DSISR                            = 42
	PT_FPR0                             = 48
	PT_FPSCR                            = 80
	PT_LNK                              = 36
	PT_MSR                              = 33
	PT_NIP                              = 32
	PT_ORIG_R3                          = 34
	PT_R0                               = 0
	PT_R1                               = 1
	PT_R10                              = 10
	PT_R11                              = 11
	PT_R12                              = 12
	PT_R13                              = 13
	PT_R14                              = 14
	PT_R15                              = 15
	PT_R16                              = 16
	PT_R17                              = 17
	PT_R18                              = 18
	PT_R19                              = 19
	PT_R2                               = 2
	PT_R20                              = 20
	PT_R21                              = 21
	PT_R22                              = 22
	PT_R23                              = 23
	PT_R24                              = 24
	PT_R25                              = 25
	PT_R26                              = 26
	PT_R27                              = 27
	PT_R28                              = 28
	PT_R29                              = 29
	PT_R3                               = 3
	PT_R30                              = 30
	PT_R31                              = 31
	PT_R4                               = 4
	PT_R5                               = 5
	PT_R6                               = 6
	PT_R7                               = 7
	PT_R8                               = 8
	PT_R9                               = 9
	PT_REGS_COUNT                       = 44
	PT_RESULT                           = 43
	PT_SOFTE                            = 39
	PT_TRAP                             = 40
	PT_VR0                              = 82
	PT_VRSAVE                           = 148
	PT_VSCR                             = 147
	PT_VSR0                             = 150
	PT_VSR31                            = 212
	PT_XER                              = 37
	R_PPC64_ADDR14                      = 7
	R_PPC64_ADDR14_BRNTAKEN             = 9
	R_PPC64_ADDR14_BRTAKEN              = 8
	R_PPC64_ADDR16                      = 3
	R_PPC64_ADDR16_DS                   = 56
	R_PPC64_ADDR16_HA                   = 6
	R_PPC64_ADDR16_HI                   = 5
	R_PPC64_ADDR16_HIGHER               = 39
	R_PPC64_ADDR16_HIGHERA              = 40
	R_PPC64_ADDR16_HIGHEST              = 41
	R_PPC64_ADDR16_HIGHESTA             = 42
	R_PPC64_ADDR16_LO                   = 4
	R_PPC64_ADDR16_LO_DS                = 57
	R_PPC64_ADDR24                      = 2
	R_PPC64_ADDR30                      = 37
	R_PPC64_ADDR32                      = 1
	R_PPC64_ADDR64                      = 38
	R_PPC64_COPY                        = 19
	R_PPC64_DTPMOD64                    = 68
	R_PPC64_DTPREL16                    = 74
	R_PPC64_DTPREL16_DS                 = 101
	R_PPC64_DTPREL16_HA                 = 77
	R_PPC64_DTPREL16_HI                 = 76
	R_PPC64_DTPREL16_HIGHER             = 103
	R_PPC64_DTPREL16_HIGHERA            = 104
	R_PPC64_DTPREL16_HIGHEST            = 105
	R_PPC64_DTPREL16_HIGHESTA           = 106
	R_PPC64_DTPREL16_LO                 = 75
	R_PPC64_DTPREL16_LO_DS              = 102
	R_PPC64_DTPREL64                    = 78
	R_PPC64_ENTRY                       = 118
	R_PPC64_GLOB_DAT                    = 20
	R_PPC64_GOT16                       = 14
	R_PPC64_GOT16_DS                    = 58
	R_PPC64_GOT16_HA                    = 17
	R_PPC64_GOT16_HI                    = 16
	R_PPC64_GOT16_LO                    = 15
	R_PPC64_GOT16_LO_DS                 = 59
	R_PPC64_GOT_DTPREL16_DS             = 91
	R_PPC64_GOT_DTPREL16_HA             = 94
	R_PPC64_GOT_DTPREL16_HI             = 93
	R_PPC64_GOT_DTPREL16_LO_DS          = 92
	R_PPC64_GOT_TLSGD16                 = 79
	R_PPC64_GOT_TLSGD16_HA              = 82
	R_PPC64_GOT_TLSGD16_HI              = 81
	R_PPC64_GOT_TLSGD16_LO              = 80
	R_PPC64_GOT_TLSLD16                 = 83
	R_PPC64_GOT_TLSLD16_HA              = 86
	R_PPC64_GOT_TLSLD16_HI              = 85
	R_PPC64_GOT_TLSLD16_LO              = 84
	R_PPC64_GOT_TPREL16_DS              = 87
	R_PPC64_GOT_TPREL16_HA              = 90
	R_PPC64_GOT_TPREL16_HI              = 89
	R_PPC64_GOT_TPREL16_LO_DS           = 88
	R_PPC64_JMP_SLOT                    = 21
	R_PPC64_NONE                        = 0
	R_PPC64_NUM                         = 253
	R_PPC64_PLT16_HA                    = 31
	R_PPC64_PLT16_HI                    = 30
	R_PPC64_PLT16_LO                    = 29
	R_PPC64_PLT16_LO_DS                 = 60
	R_PPC64_PLT32                       = 27
	R_PPC64_PLT64                       = 45
	R_PPC64_PLTGOT16                    = 52
	R_PPC64_PLTGOT16_DS                 = 65
	R_PPC64_PLTGOT16_HA                 = 55
	R_PPC64_PLTGOT16_HI                 = 54
	R_PPC64_PLTGOT16_LO                 = 53
	R_PPC64_PLTGOT16_LO_DS              = 66
	R_PPC64_PLTREL32                    = 28
	R_PPC64_PLTREL64                    = 46
	R_PPC64_REL14                       = 11
	R_PPC64_REL14_BRNTAKEN              = 13
	R_PPC64_REL14_BRTAKEN               = 12
	R_PPC64_REL16                       = 249
	R_PPC64_REL16_HA                    = 252
	R_PPC64_REL16_HI                    = 251
	R_PPC64_REL16_LO                    = 250
	R_PPC64_REL24                       = 10
	R_PPC64_REL32                       = 26
	R_PPC64_REL64                       = 44
	R_PPC64_RELATIVE                    = 22
	R_PPC64_SECTOFF                     = 33
	R_PPC64_SECTOFF_DS                  = 61
	R_PPC64_SECTOFF_HA                  = 36
	R_PPC64_SECTOFF_HI                  = 35
	R_PPC64_SECTOFF_LO                  = 34
	R_PPC64_SECTOFF_LO_DS               = 62
	R_PPC64_TLS                         = 67
	R_PPC64_TLSGD                       = 107
	R_PPC64_TLSLD                       = 108
	R_PPC64_TOC                         = 51
	R_PPC64_TOC16                       = 47
	R_PPC64_TOC16_DS                    = 63
	R_PPC64_TOC16_HA                    = 50
	R_PPC64_TOC16_HI                    = 49
	R_PPC64_TOC16_LO                    = 48
	R_PPC64_TOC16_LO_DS                 = 64
	R_PPC64_TOCSAVE                     = 109
	R_PPC64_TPREL16                     = 69
	R_PPC64_TPREL16_DS                  = 95
	R_PPC64_TPREL16_HA                  = 72
	R_PPC64_TPREL16_HI                  = 71
	R_PPC64_TPREL16_HIGHER              = 97
	R_PPC64_TPREL16_HIGHERA             = 98
	R_PPC64_TPREL16_HIGHEST             = 99
	R_PPC64_TPREL16_HIGHESTA            = 100
	R_PPC64_TPREL16_LO                  = 70
	R_PPC64_TPREL16_LO_DS               = 96
	R_PPC64_TPREL64                     = 73
	R_PPC64_UADDR16                     = 25
	R_PPC64_UADDR32                     = 24
	R_PPC64_UADDR64                     = 43
	R_PPC_ADDR14                        = 7
	R_PPC_ADDR14_BRNTAKEN               = 9
	R_PPC_ADDR14_BRTAKEN                = 8
	R_PPC_ADDR16                        = 3
	R_PPC_ADDR16_HA                     = 6
	R_PPC_ADDR16_HI                     = 5
	R_PPC_ADDR16_LO                     = 4
	R_PPC_ADDR24                        = 2
	R_PPC_ADDR32                        = 1
	R_PPC_COPY                          = 19
	R_PPC_DTPMOD32                      = 68
	R_PPC_DTPREL16                      = 74
	R_PPC_DTPREL16_HA                   = 77
	R_PPC_DTPREL16_HI                   = 76
	R_PPC_DTPREL16_LO                   = 75
	R_PPC_DTPREL32                      = 78
	R_PPC_GLOB_DAT                      = 20
	R_PPC_GOT16                         = 14
	R_PPC_GOT16_HA                      = 17
	R_PPC_GOT16_HI                      = 16
	R_PPC_GOT16_LO                      = 15
	R_PPC_GOT_DTPREL16                  = 91
	R_PPC_GOT_DTPREL16_HA               = 94
	R_PPC_GOT_DTPREL16_HI               = 93
	R_PPC_GOT_DTPREL16_LO               = 92
	R_PPC_GOT_TLSGD16                   = 79
	R_PPC_GOT_TLSGD16_HA                = 82
	R_PPC_GOT_TLSGD16_HI                = 81
	R_PPC_GOT_TLSGD16_LO                = 80
	R_PPC_GOT_TLSLD16                   = 83
	R_PPC_GOT_TLSLD16_HA                = 86
	R_PPC_GOT_TLSLD16_HI                = 85
	R_PPC_GOT_TLSLD16_LO                = 84
	R_PPC_GOT_TPREL16                   = 87
	R_PPC_GOT_TPREL16_HA                = 90
	R_PPC_GOT_TPREL16_HI                = 89
	R_PPC_GOT_TPREL16_LO                = 88
	R_PPC_JMP_SLOT                      = 21
	R_PPC_LOCAL24PC                     = 23
	R_PPC_NONE                          = 0
	R_PPC_NUM                           = 95
	R_PPC_PLT16_HA                      = 31
	R_PPC_PLT16_HI                      = 30
	R_PPC_PLT16_LO                      = 29
	R_PPC_PLT32                         = 27
	R_PPC_PLTREL24                      = 18
	R_PPC_PLTREL32                      = 28
	R_PPC_REL14                         = 11
	R_PPC_REL14_BRNTAKEN                = 13
	R_PPC_REL14_BRTAKEN                 = 12
	R_PPC_REL24                         = 10
	R_PPC_REL32                         = 26
	R_PPC_RELATIVE                      = 22
	R_PPC_SDAREL16                      = 32
	R_PPC_SECTOFF                       = 33
	R_PPC_SECTOFF_HA                    = 36
	R_PPC_SECTOFF_HI                    = 35
	R_PPC_SECTOFF_LO                    = 34
	R_PPC_TLS                           = 67
	R_PPC_TPREL16                       = 69
	R_PPC_TPREL16_HA                    = 72
	R_PPC_TPREL16_HI                    = 71
	R_PPC_TPREL16_LO                    = 70
	R_PPC_TPREL32                       = 73
	R_PPC_UADDR16                       = 25
	R_PPC_UADDR32                       = 24
	SA_INTERRUPT                        = 0x20000000
	SA_NOCLDSTOP                        = 1
	SA_NOCLDWAIT                        = 2
	SA_NODEFER                          = 0x40000000
	SA_NOMASK                           = 1073741824
	SA_ONESHOT                          = 2147483648
	SA_ONSTACK                          = 0x08000000
	SA_RESETHAND                        = 0x80000000
	SA_RESTART                          = 0x10000000
	SA_SIGINFO                          = 4
	SA_STACK                            = 134217728
	SIGABRT                             = 6
	SIGALRM                             = 14
	SIGBUS                              = 7
	SIGCHLD                             = 17
	SIGCLD                              = 17
	SIGCONT                             = 18
	SIGFPE                              = 8
	SIGHUP                              = 1
	SIGILL                              = 4
	SIGINT                              = 2
	SIGIO                               = 29
	SIGIOT                              = 6
	SIGKILL                             = 9
	SIGPIPE                             = 13
	SIGPOLL                             = 29
	SIGPROF                             = 27
	SIGPWR                              = 30
	SIGQUIT                             = 3
	SIGSEGV                             = 11
	SIGSTKFLT                           = 16
	SIGSTKSZ                            = 16384
	SIGSTOP                             = 19
	SIGSYS                              = 31
	SIGTERM                             = 15
	SIGTRAP                             = 5
	SIGTSTP                             = 20
	SIGTTIN                             = 21
	SIGTTOU                             = 22
	SIGURG                              = 23
	SIGUSR1                             = 10
	SIGUSR2                             = 12
	SIGVTALRM                           = 26
	SIGWINCH                            = 28
	SIGXCPU                             = 24
	SIGXFSZ                             = 25
	SIG_BLOCK                           = 0
	SIG_SETMASK                         = 2
	SIG_UNBLOCK                         = 1
	X_ARCH_PPC                          = 1
	X_ARCH_PPC64                        = 1
	X_ARCH_PPCGR                        = 1
	X_ARCH_PPCSQ                        = 1
	X_ARCH_PWR4                         = 1
	X_ARCH_PWR5                         = 1
	X_ARCH_PWR5X                        = 1
	X_ARCH_PWR6                         = 1
	X_ARCH_PWR7                         = 1
	X_ARCH_PWR8                         = 1
	X_ASM_GENERIC_INT_L64_H             = 0
	X_ASM_POWERPC_AUXVEC_H              = 0
	X_ASM_POWERPC_ELF_H                 = 0
	X_ASM_POWERPC_POSIX_TYPES_H         = 0
	X_ASM_POWERPC_PTRACE_H              = 0
	X_ASM_POWERPC_SIGCONTEXT_H          = 0
	X_ASM_POWERPC_TYPES_H               = 0
	X_ATFILE_SOURCE                     = 1
	X_BITS_ENDIANNESS_H                 = 1
	X_BITS_ENDIAN_H                     = 1
	X_BITS_PTHREADTYPES_ARCH_H          = 1
	X_BITS_PTHREADTYPES_COMMON_H        = 1
	X_BITS_SIGACTION_H                  = 1
	X_BITS_SIGCONTEXT_H                 = 1
	X_BITS_SIGEVENT_CONSTS_H            = 1
	X_BITS_SIGINFO_ARCH_H               = 1
	X_BITS_SIGINFO_CONSTS_H             = 1
	X_BITS_SIGNUM_GENERIC_H             = 1
	X_BITS_SIGNUM_H                     = 1
	X_BITS_SIGSTACK_H                   = 1
	X_BITS_SIGTHREAD_H                  = 1
	X_BITS_SS_FLAGS_H                   = 1
	X_BITS_TIME64_H                     = 1
	X_BITS_TYPESIZES_H                  = 1
	X_BITS_TYPES_H                      = 1
	X_BSD_SIZE_T_                       = 0
	X_BSD_SIZE_T_DEFINED_               = 0
	X_CALL_ELF                          = 2
	X_CALL_LINUX                        = 1
	X_DEFAULT_SOURCE                    = 1
	X_FEATURES_H                        = 1
	X_FILE_OFFSET_BITS                  = 64
	X_GCC_SIZE_T                        = 0
	X_LINUX_POSIX_TYPES_H               = 0
	X_LINUX_TYPES_H                     = 0
	X_LITTLE_ENDIAN                     = 1
	X_LP64                              = 1
	X_NSIG                              = 65
	X_POSIX_C_SOURCE                    = 200809
	X_POSIX_SOURCE                      = 1
	X_RWLOCK_INTERNAL_H                 = 0
	X_SIGNAL_H                          = 0
	X_SIZET_                            = 0
	X_SIZE_T                            = 0
	X_SIZE_T_                           = 0
	X_SIZE_T_DECLARED                   = 0
	X_SIZE_T_DEFINED                    = 0
	X_SIZE_T_DEFINED_                   = 0
	X_STDC_PREDEF_H                     = 1
	X_STRUCT_TIMESPEC                   = 1
	X_SYS_CDEFS_H                       = 1
	X_SYS_SIZE_T_H                      = 0
	X_SYS_UCONTEXT_H                    = 1
	X_THREAD_MUTEX_INTERNAL_H           = 1
	X_THREAD_SHARED_TYPES_H             = 1
	X_T_SIZE                            = 0
	X_T_SIZE_                           = 0
	Linux                               = 1
	Unix                                = 1
)

const (
	SIGEV_SIGNAL = 0
	SIGEV_NONE   = 1
	SIGEV_THREAD = 2

	SIGEV_THREAD_ID = 4
)

const (
	SEGV_MAPERR  = 1
	SEGV_ACCERR  = 2
	SEGV_BNDERR  = 3
	SEGV_PKUERR  = 4
	SEGV_ACCADI  = 5
	SEGV_ADIDERR = 6
	SEGV_ADIPERR = 7
)

const (
	BUS_ADRALN    = 1
	BUS_ADRERR    = 2
	BUS_OBJERR    = 3
	BUS_MCEERR_AR = 4
	BUS_MCEERR_AO = 5
)

const (
	CLD_EXITED    = 1
	CLD_KILLED    = 2
	CLD_DUMPED    = 3
	CLD_TRAPPED   = 4
	CLD_STOPPED   = 5
	CLD_CONTINUED = 6
)

const (
	POLL_IN  = 1
	POLL_OUT = 2
	POLL_MSG = 3
	POLL_ERR = 4
	POLL_PRI = 5
	POLL_HUP = 6
)

const (
	SI_ASYNCNL  = -60
	SI_DETHREAD = -7

	SI_TKILL   = -6
	SI_SIGIO   = -5
	SI_ASYNCIO = -4
	SI_MESGQ   = -3
	SI_TIMER   = -2
	SI_QUEUE   = -1
	SI_USER    = 0
	SI_KERNEL  = 128
)

const (
	ILL_ILLOPC   = 1
	ILL_ILLOPN   = 2
	ILL_ILLADR   = 3
	ILL_ILLTRP   = 4
	ILL_PRVOPC   = 5
	ILL_PRVREG   = 6
	ILL_COPROC   = 7
	ILL_BADSTK   = 8
	ILL_BADIADDR = 9
)

const (
	FPE_INTDIV   = 1
	FPE_INTOVF   = 2
	FPE_FLTDIV   = 3
	FPE_FLTOVF   = 4
	FPE_FLTUND   = 5
	FPE_FLTRES   = 6
	FPE_FLTINV   = 7
	FPE_FLTSUB   = 8
	FPE_FLTUNK   = 14
	FPE_CONDTRAP = 15
)

const (
	SS_ONSTACK = 1
	SS_DISABLE = 2
)

type Ptrdiff_t = int64

type Size_t = uint64

type Wchar_t = int32

type X__int128_t = struct {
	Flo int64
	Fhi int64
}
type X__uint128_t = struct {
	Flo uint64
	Fhi uint64
}

type X__builtin_va_list = uintptr
type X__ieee128 = float64

type X__u_char = uint8
type X__u_short = uint16
type X__u_int = uint32
type X__u_long = uint64

type X__int8_t = int8
type X__uint8_t = uint8
type X__int16_t = int16
type X__uint16_t = uint16
type X__int32_t = int32
type X__uint32_t = uint32
type X__int64_t = int64
type X__uint64_t = uint64

type X__int_least8_t = X__int8_t
type X__uint_least8_t = X__uint8_t
type X__int_least16_t = X__int16_t
type X__uint_least16_t = X__uint16_t
type X__int_least32_t = X__int32_t
type X__uint_least32_t = X__uint32_t
type X__int_least64_t = X__int64_t
type X__uint_least64_t = X__uint64_t

type X__quad_t = int64
type X__u_quad_t = uint64

type X__intmax_t = int64
type X__uintmax_t = uint64

type X__dev_t = uint64
type X__uid_t = uint32
type X__gid_t = uint32
type X__ino_t = uint64
type X__ino64_t = uint64
type X__mode_t = uint32
type X__nlink_t = uint64
type X__off_t = int64
type X__off64_t = int64
type X__pid_t = int32
type X__fsid_t = struct{ F__val [2]int32 }
type X__clock_t = int64
type X__rlim_t = uint64
type X__rlim64_t = uint64
type X__id_t = uint32
type X__time_t = int64
type X__useconds_t = uint32
type X__suseconds_t = int64

type X__daddr_t = int32
type X__key_t = int32

type X__clockid_t = int32

type X__timer_t = uintptr

type X__blksize_t = int64

type X__blkcnt_t = int64
type X__blkcnt64_t = int64

type X__fsblkcnt_t = uint64
type X__fsblkcnt64_t = uint64

type X__fsfilcnt_t = uint64
type X__fsfilcnt64_t = uint64

type X__fsword_t = int64

type X__ssize_t = int64

type X__syscall_slong_t = int64

type X__syscall_ulong_t = uint64

type X__loff_t = X__off64_t
type X__caddr_t = uintptr

type X__intptr_t = int64

type X__socklen_t = uint32

type X__sig_atomic_t = int32

type Sig_atomic_t = X__sig_atomic_t

type X__sigset_t = struct{ F__val [16]uint64 }

type Sigset_t = X__sigset_t

type Pid_t = X__pid_t
type Uid_t = X__uid_t

type Timespec = struct {
	Ftv_sec  X__time_t
	Ftv_nsec X__syscall_slong_t
}

type Sigval = struct {
	F__ccgo_pad1 [0]uint64
	Fsival_int   int32
	F__ccgo_pad2 [4]byte
}

type X__sigval_t = Sigval

type Siginfo_t = struct {
	Fsi_signo  int32
	Fsi_errno  int32
	Fsi_code   int32
	F__pad0    int32
	F_sifields struct {
		F__ccgo_pad1 [0]uint64
		F_pad        [28]int32
	}
}

type Sigval_t = X__sigval_t

type Pthread_attr_t1 = struct {
	F__ccgo_pad1 [0]uint64
	F__size      [56]uint8
}

type Pthread_attr_t = Pthread_attr_t1

type Sigevent = struct {
	Fsigev_value  X__sigval_t
	Fsigev_signo  int32
	Fsigev_notify int32
	F_sigev_un    struct {
		F__ccgo_pad1 [0]uint64
		F_pad        [12]int32
	}
}

type Sigevent_t = Sigevent

type X__sighandler_t = uintptr

type Sig_t = X__sighandler_t

type Sigaction = struct {
	F__sigaction_handler struct{ Fsa_handler X__sighandler_t }
	Fsa_mask             X__sigset_t
	Fsa_flags            int32
	F__ccgo_pad1         [4]byte
	Fsa_restorer         uintptr
}

type X__s8 = int8
type X__u8 = uint8

type X__s16 = int16
type X__u16 = uint16

type X__s32 = int32
type X__u32 = uint32

type X__s64 = int64
type X__u64 = uint64

type X__vector128 = struct {
	F__ccgo_pad1 [0]uint64
	Fu           [4]X__u32
}

type X__kernel_fd_set = struct{ Ffds_bits [16]uint64 }

type X__kernel_sighandler_t = uintptr

type X__kernel_key_t = int32
type X__kernel_mqd_t = int32

type X__kernel_old_dev_t = uint64

type X__kernel_long_t = int64
type X__kernel_ulong_t = uint64

type X__kernel_ino_t = X__kernel_ulong_t

type X__kernel_mode_t = uint32

type X__kernel_pid_t = int32

type X__kernel_ipc_pid_t = int32

type X__kernel_uid_t = uint32
type X__kernel_gid_t = uint32

type X__kernel_suseconds_t = X__kernel_long_t

type X__kernel_daddr_t = int32

type X__kernel_uid32_t = uint32
type X__kernel_gid32_t = uint32

type X__kernel_old_uid_t = X__kernel_uid_t
type X__kernel_old_gid_t = X__kernel_gid_t

type X__kernel_size_t = X__kernel_ulong_t
type X__kernel_ssize_t = X__kernel_long_t
type X__kernel_ptrdiff_t = X__kernel_long_t

type X__kernel_fsid_t = struct{ Fval [2]int32 }

type X__kernel_off_t = X__kernel_long_t
type X__kernel_loff_t = int64
type X__kernel_old_time_t = X__kernel_long_t
type X__kernel_time_t = X__kernel_long_t
type X__kernel_time64_t = int64
type X__kernel_clock_t = X__kernel_long_t
type X__kernel_timer_t = int32
type X__kernel_clockid_t = int32
type X__kernel_caddr_t = uintptr
type X__kernel_uid16_t = uint16
type X__kernel_gid16_t = uint16

type X__le16 = X__u16
type X__be16 = X__u16
type X__le32 = X__u32
type X__be32 = X__u32
type X__le64 = X__u64
type X__be64 = X__u64

type X__sum16 = X__u16
type X__wsum = X__u32

type X__poll_t = uint32

type Pt_regs = struct {
	Fgpr       [32]uint64
	Fnip       uint64
	Fmsr       uint64
	Forig_gpr3 uint64
	Fctr       uint64
	Flink      uint64
	Fxer       uint64
	Fccr       uint64
	Fsofte     uint64
	Ftrap      uint64
	Fdar       uint64
	Fdsisr     uint64
	Fresult    uint64
}

type Ppc_debug_info = struct {
	Fversion             X__u32
	Fnum_instruction_bps X__u32
	Fnum_data_bps        X__u32
	Fnum_condition_regs  X__u32
	Fdata_bp_alignment   X__u32
	Fsizeof_condition    X__u32
	Ffeatures            X__u64
}

type Ppc_hw_breakpoint = struct {
	Fversion         X__u32
	Ftrigger_type    X__u32
	Faddr_mode       X__u32
	Fcondition_mode  X__u32
	Faddr            X__u64
	Faddr2           X__u64
	Fcondition_value X__u64
}

type Elf_greg_t64 = uint64
type Elf_gregset_t64 = [48]Elf_greg_t64

type Elf_greg_t32 = uint32
type Elf_gregset_t32 = [48]Elf_greg_t32
type Compat_elf_gregset_t = Elf_gregset_t32

type Elf_greg_t = Elf_greg_t64
type Elf_gregset_t = Elf_gregset_t64

type Elf_fpreg_t = float64
type Elf_fpregset_t = [33]Elf_fpreg_t

type Elf_vrreg_t = X__vector128
type Elf_vrregset_t = [34]Elf_vrreg_t
type Elf_vrregset_t32 = [33]Elf_vrreg_t
type Elf_vsrreghalf_t32 = [32]Elf_fpreg_t

type Ppc64_opd_entry = struct {
	Ffuncaddr uint64
	Fr2       uint64
}

type Sigcontext = struct {
	F_unused     [4]uint64
	Fsignal      int32
	F_pad0       int32
	Fhandler     uint64
	Foldmask     uint64
	Fregs        uintptr
	Fgp_regs     Elf_gregset_t
	Ffp_regs     Elf_fpregset_t
	Fv_regs      uintptr
	Fvmx_reserve [101]int64
}

type Stack_t = struct {
	Fss_sp       uintptr
	Fss_flags    int32
	F__ccgo_pad1 [4]byte
	Fss_size     Size_t
}

type Gregset_t = [48]uint64
type Fpregset_t = [33]float64

type X_libc_vscr = struct {
	Fvscr_word uint32
	F__pad     [3]uint32
}

type Vscr_t = X_libc_vscr

type X_libc_vrstate = struct {
	Fvrregs [32][4]uint32
	Fvscr   Vscr_t
	Fvrsave uint32
	F__pad  [3]uint32
}

type Vrregset_t = X_libc_vrstate

type Mcontext_t = struct {
	F__glibc_reserved [4]uint64
	Fsignal           int32
	F__pad0           int32
	Fhandler          uint64
	Foldmask          uint64
	Fregs             uintptr
	Fgp_regs          Gregset_t
	Ffp_regs          Fpregset_t
	Fv_regs           uintptr
	Fvmx_reserve      [69]int64
}

type Ucontext_t1 = struct {
	Fuc_flags    uint64
	Fuc_link     uintptr
	Fuc_stack    Stack_t
	Fuc_sigmask  Sigset_t
	Fuc_mcontext Mcontext_t
}

type Ucontext_t = Ucontext_t1

type Sigstack = struct {
	Fss_sp       uintptr
	Fss_onstack  int32
	F__ccgo_pad1 [4]byte
}

type X__pthread_internal_list = struct {
	F__prev uintptr
	F__next uintptr
}

type X__pthread_list_t = X__pthread_internal_list

type X__pthread_internal_slist = struct{ F__next uintptr }

type X__pthread_slist_t = X__pthread_internal_slist

type X__pthread_mutex_s = struct {
	F__lock    int32
	F__count   uint32
	F__owner   int32
	F__nusers  uint32
	F__kind    int32
	F__spins   int16
	F__elision int16
	F__list    X__pthread_list_t
}

type X__pthread_rwlock_arch_t = struct {
	F__readers       uint32
	F__writers       uint32
	F__wrphase_futex uint32
	F__writers_futex uint32
	F__pad3          uint32
	F__pad4          uint32
	F__cur_writer    int32
	F__shared        int32
	F__rwelision     uint8
	F__pad1          [7]uint8
	F__pad2          uint64
	F__flags         uint32
	F__ccgo_pad1     [4]byte
}

type X__pthread_cond_s = struct {
	F__0            struct{ F__wseq uint64 }
	F__8            struct{ F__g1_start uint64 }
	F__g_refs       [2]uint32
	F__g_size       [2]uint32
	F__g1_orig_size uint32
	F__wrefs        uint32
	F__g_signals    [2]uint32
}

type Pthread_t = uint64

type Pthread_mutexattr_t = struct {
	F__ccgo_pad1 [0]uint32
	F__size      [4]uint8
}

type Pthread_condattr_t = struct {
	F__ccgo_pad1 [0]uint32
	F__size      [4]uint8
}

type Pthread_key_t = uint32

type Pthread_once_t = int32

type Pthread_mutex_t = struct{ F__data X__pthread_mutex_s }

type Pthread_cond_t = struct{ F__data X__pthread_cond_s }

type Pthread_rwlock_t = struct{ F__data X__pthread_rwlock_arch_t }

type Pthread_rwlockattr_t = struct {
	F__ccgo_pad1 [0]uint64
	F__size      [8]uint8
}

type Pthread_spinlock_t = int32

type Pthread_barrier_t = struct {
	F__ccgo_pad1 [0]uint64
	F__size      [32]uint8
}

type Pthread_barrierattr_t = struct {
	F__ccgo_pad1 [0]uint32
	F__size      [4]uint8
}

var _ uint8
