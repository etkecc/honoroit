// Code generated by 'ccgo signal/gen.c -crt-import-path "" -export-defines "" -export-enums "" -export-externs X -export-fields F -export-structs "" -export-typedefs "" -header -hide _OSSwapInt16,_OSSwapInt32,_OSSwapInt64 -ignore-unsupported-alignment -o signal/signal_netbsd_arm.go -pkgname signal', DO NOT EDIT.

package signal

import (
	"math"
	"reflect"
	"sync/atomic"
	"unsafe"
)

var _ = math.Pi
var _ reflect.Kind
var _ atomic.Value
var _ unsafe.Pointer

const (
	BIG_ENDIAN                    = 4321
	BUS_ADRALN                    = 1
	BUS_ADRERR                    = 2
	BUS_OBJERR                    = 3
	BYTE_ORDER                    = 1234
	CLD_CONTINUED                 = 6
	CLD_DUMPED                    = 3
	CLD_EXITED                    = 1
	CLD_KILLED                    = 2
	CLD_STOPPED                   = 5
	CLD_TRAPPED                   = 4
	FD_SETSIZE                    = 256
	FPE_FLTDIV                    = 3
	FPE_FLTINV                    = 7
	FPE_FLTOVF                    = 4
	FPE_FLTRES                    = 6
	FPE_FLTSUB                    = 8
	FPE_FLTUND                    = 5
	FPE_INTDIV                    = 1
	FPE_INTOVF                    = 2
	ILL_BADSTK                    = 8
	ILL_COPROC                    = 7
	ILL_ILLADR                    = 3
	ILL_ILLOPC                    = 1
	ILL_ILLOPN                    = 2
	ILL_ILLTRP                    = 4
	ILL_PRVOPC                    = 5
	ILL_PRVREG                    = 6
	INT16_MAX                     = 32767
	INT16_MIN                     = -32768
	INT32_MAX                     = 2147483647
	INT32_MIN                     = -2147483648
	INT64_MAX                     = 9223372036854775807
	INT64_MIN                     = -9223372036854775808
	INT8_MAX                      = 127
	INT8_MIN                      = -128
	INTMAX_MAX                    = 9223372036854775807
	INTMAX_MIN                    = -9223372036854775808
	INTPTR_MAX                    = 2147483647
	INTPTR_MIN                    = -2147483648
	INT_FAST16_MAX                = 2147483647
	INT_FAST16_MIN                = -2147483648
	INT_FAST32_MAX                = 2147483647
	INT_FAST32_MIN                = -2147483648
	INT_FAST64_MAX                = 9223372036854775807
	INT_FAST64_MIN                = -9223372036854775808
	INT_FAST8_MAX                 = 2147483647
	INT_FAST8_MIN                 = -2147483648
	INT_LEAST16_MAX               = 32767
	INT_LEAST16_MIN               = -32768
	INT_LEAST32_MAX               = 2147483647
	INT_LEAST32_MIN               = -2147483648
	INT_LEAST64_MAX               = 9223372036854775807
	INT_LEAST64_MIN               = -9223372036854775808
	INT_LEAST8_MAX                = 127
	INT_LEAST8_MIN                = -128
	LITTLE_ENDIAN                 = 1234
	MINSIGSTKSZ                   = 8192
	NBBY                          = 8
	NFDBITS                       = 32
	NODEVMAJOR                    = -1
	NSIG                          = 64
	PDP_ENDIAN                    = 3412
	POLL_ERR                      = 4
	POLL_HUP                      = 6
	POLL_IN                       = 1
	POLL_MSG                      = 3
	POLL_OUT                      = 2
	POLL_PRI                      = 5
	PTRDIFF_MAX                   = 2147483647
	PTRDIFF_MIN                   = -2147483648
	SA_NOCLDSTOP                  = 0x0008
	SA_NOCLDWAIT                  = 0x0020
	SA_NODEFER                    = 0x0010
	SA_NOKERNINFO                 = 0x0080
	SA_ONSTACK                    = 0x0001
	SA_RESETHAND                  = 0x0004
	SA_RESTART                    = 0x0002
	SA_SIGINFO                    = 0x0040
	SEGV_ACCERR                   = 2
	SEGV_MAPERR                   = 1
	SIGABRT                       = 6
	SIGALRM                       = 14
	SIGBUS                        = 10
	SIGCHLD                       = 20
	SIGCONT                       = 19
	SIGEMT                        = 7
	SIGEV_NONE                    = 0
	SIGEV_SA                      = 3
	SIGEV_SIGNAL                  = 1
	SIGEV_THREAD                  = 2
	SIGFPE                        = 8
	SIGHUP                        = 1
	SIGILL                        = 4
	SIGINFO                       = 29
	SIGINT                        = 2
	SIGIO                         = 23
	SIGIOT                        = 6
	SIGKILL                       = 9
	SIGPIPE                       = 13
	SIGPROF                       = 27
	SIGPWR                        = 32
	SIGQUIT                       = 3
	SIGRTMAX                      = 63
	SIGRTMIN                      = 33
	SIGSEGV                       = 11
	SIGSTKSZ                      = 40960
	SIGSTOP                       = 17
	SIGSYS                        = 12
	SIGTERM                       = 15
	SIGTRAP                       = 5
	SIGTSTP                       = 18
	SIGTTIN                       = 21
	SIGTTOU                       = 22
	SIGURG                        = 16
	SIGUSR1                       = 30
	SIGUSR2                       = 31
	SIGVTALRM                     = 26
	SIGWINCH                      = 28
	SIGXCPU                       = 24
	SIGXFSZ                       = 25
	SIG_ATOMIC_MAX                = 2147483647
	SIG_ATOMIC_MIN                = -2147483648
	SIG_BLOCK                     = 1
	SIG_CODE_BUS_ADDR_MASK        = 0xfffffff0
	SIG_CODE_BUS_TYPE_MASK        = 0x0000000f
	SIG_CODE_FPE_CODE_MASK        = 0x00000f00
	SIG_CODE_FPE_CODE_SHIFT       = 8
	SIG_CODE_FPE_TYPE_MASK        = 0x000000ff
	SIG_CODE_SEGV_ADDR_MASK       = 4294967280
	SIG_CODE_SEGV_TYPE_MASK       = 15
	SIG_SETMASK                   = 3
	SIG_UNBLOCK                   = 2
	SIZE_MAX                      = 4294967295
	SI_ASYNCIO                    = -3
	SI_LWP                        = -5
	SI_MESGQ                      = -4
	SI_NOINFO                     = 32767
	SI_QUEUE                      = -1
	SI_TIMER                      = -2
	SI_USER                       = 0
	SS_DISABLE                    = 0x0004
	SS_ONSTACK                    = 0x0001
	TRAP_BRKPT                    = 1
	TRAP_CHLD                     = 4
	TRAP_DBREG                    = 6
	TRAP_EXEC                     = 3
	TRAP_LWP                      = 5
	TRAP_SCE                      = 7
	TRAP_SCX                      = 8
	TRAP_TRACE                    = 2
	UINT16_MAX                    = 65535
	UINT32_MAX                    = 4294967295
	UINT64_MAX                    = 18446744073709551615
	UINT8_MAX                     = 255
	UINTMAX_MAX                   = 18446744073709551615
	UINTPTR_MAX                   = 4294967295
	UINT_FAST16_MAX               = 4294967295
	UINT_FAST32_MAX               = 4294967295
	UINT_FAST64_MAX               = 18446744073709551615
	UINT_FAST8_MAX                = 4294967295
	UINT_LEAST16_MAX              = 65535
	UINT_LEAST32_MAX              = 4294967295
	UINT_LEAST64_MAX              = 18446744073709551615
	UINT_LEAST8_MAX               = 255
	WCHAR_MAX                     = 2147483647
	WCHAR_MIN                     = -2147483648
	WINT_MAX                      = 2147483647
	WINT_MIN                      = -2147483648
	X_ARM_ARCH_4T                 = 0
	X_ARM_ARCH_5                  = 0
	X_ARM_ARCH_5T                 = 0
	X_ARM_ARCH_6                  = 0
	X_ARM_ARCH_7                  = 0
	X_ARM_ARCH_DWORD_OK           = 0
	X_ARM_ARCH_T2                 = 0
	X_ARM_BSWAP_H_                = 0
	X_ARM_BYTE_SWAP_H_            = 0
	X_ARM_CDEFS_H_                = 0
	X_ARM_INT_CONST_H_            = 0
	X_ARM_INT_LIMITS_H_           = 0
	X_ARM_INT_MWGWTYPES_H_        = 0
	X_ARM_INT_TYPES_H_            = 0
	X_ARM_MCONTEXT_H_             = 0
	X_ARM_SIGNAL_H_               = 0
	X_ARM_TYPES_H_                = 0
	X_ARM_WCHAR_LIMITS_H_         = 0
	X_BIG_ENDIAN                  = 4321
	X_BSD_INT16_T_                = 0
	X_BSD_INT32_T_                = 0
	X_BSD_INT64_T_                = 0
	X_BSD_INT8_T_                 = 0
	X_BSD_INTPTR_T_               = 0
	X_BSD_UINT16_T_               = 0
	X_BSD_UINT32_T_               = 0
	X_BSD_UINT64_T_               = 0
	X_BSD_UINT8_T_                = 0
	X_BSD_UINTPTR_T_              = 0
	X_BYTE_ORDER                  = 1234
	X_FILE_OFFSET_BITS            = 64
	X_LIB_PTHREAD_TYPES_H         = 0
	X_LITTLE_ENDIAN               = 1234
	X_NETBSD_SOURCE               = 1
	X_NGREG                       = 17
	X_NSIG                        = 64
	X_PDP_ENDIAN                  = 3412
	X_PT_BARRIERATTR_DEAD         = 0xDEAD0808
	X_PT_BARRIERATTR_MAGIC        = 0x88880808
	X_PT_BARRIER_DEAD             = 0xDEAD0008
	X_PT_BARRIER_MAGIC            = 0x88880008
	X_PT_CONDATTR_DEAD            = 0xDEAD0006
	X_PT_CONDATTR_MAGIC           = 0x66660006
	X_PT_COND_DEAD                = 0xDEAD0005
	X_PT_COND_MAGIC               = 0x55550005
	X_PT_MUTEXATTR_DEAD           = 0xDEAD0004
	X_PT_MUTEXATTR_MAGIC          = 0x44440004
	X_PT_MUTEX_DEAD               = 0xDEAD0003
	X_PT_MUTEX_MAGIC              = 0x33330003
	X_PT_RWLOCKATTR_DEAD          = 0xDEAD0909
	X_PT_RWLOCKATTR_MAGIC         = 0x99990909
	X_PT_RWLOCK_DEAD              = 0xDEAD0009
	X_PT_RWLOCK_MAGIC             = 0x99990009
	X_PT_SPINLOCK_DEAD            = 0xDEAD0007
	X_PT_SPINLOCK_MAGIC           = 0x77770007
	X_PT_SPINLOCK_PSHARED         = 0x00000001
	X_QUAD_HIGHWORD               = 1
	X_QUAD_LOWWORD                = 0
	X_REG_CPSR                    = 16
	X_REG_ELR                     = 32
	X_REG_FP                      = 11
	X_REG_LR                      = 14
	X_REG_PC                      = 15
	X_REG_R0                      = 0
	X_REG_R1                      = 1
	X_REG_R10                     = 10
	X_REG_R11                     = 11
	X_REG_R12                     = 12
	X_REG_R13                     = 13
	X_REG_R14                     = 14
	X_REG_R15                     = 15
	X_REG_R2                      = 2
	X_REG_R3                      = 3
	X_REG_R4                      = 4
	X_REG_R5                      = 5
	X_REG_R6                      = 6
	X_REG_R7                      = 7
	X_REG_R8                      = 8
	X_REG_R9                      = 9
	X_REG_RV                      = 0
	X_REG_SP                      = 13
	X_REG_SPSR                    = 33
	X_REG_TPIDR                   = 34
	X_REG_X0                      = 0
	X_REG_X1                      = 1
	X_REG_X10                     = 10
	X_REG_X11                     = 11
	X_REG_X12                     = 12
	X_REG_X13                     = 13
	X_REG_X14                     = 14
	X_REG_X15                     = 15
	X_REG_X16                     = 16
	X_REG_X17                     = 17
	X_REG_X18                     = 18
	X_REG_X19                     = 19
	X_REG_X2                      = 2
	X_REG_X20                     = 20
	X_REG_X21                     = 21
	X_REG_X22                     = 22
	X_REG_X23                     = 23
	X_REG_X24                     = 24
	X_REG_X25                     = 25
	X_REG_X26                     = 26
	X_REG_X27                     = 27
	X_REG_X28                     = 28
	X_REG_X29                     = 29
	X_REG_X3                      = 3
	X_REG_X30                     = 30
	X_REG_X31                     = 31
	X_REG_X4                      = 4
	X_REG_X5                      = 5
	X_REG_X6                      = 6
	X_REG_X7                      = 7
	X_REG_X8                      = 8
	X_REG_X9                      = 9
	X_SIGNAL_H_                   = 0
	X_SIZE_T                      = 0
	X_SYS_ANSI_H_                 = 0
	X_SYS_BSWAP_H_                = 0
	X_SYS_CDEFS_ELF_H_            = 0
	X_SYS_CDEFS_H_                = 0
	X_SYS_COMMON_ANSI_H_          = 0
	X_SYS_COMMON_INT_LIMITS_H_    = 0
	X_SYS_COMMON_INT_MWGWTYPES_H_ = 0
	X_SYS_COMMON_INT_TYPES_H_     = 0
	X_SYS_ENDIAN_H_               = 0
	X_SYS_FD_SET_H_               = 0
	X_SYS_SIGINFO_H_              = 0
	X_SYS_SIGNAL_H_               = 0
	X_SYS_SIGTYPES_H_             = 0
	X_SYS_STDINT_H_               = 0
	X_SYS_TIMESPEC_H_             = 0
	X_SYS_TYPES_H_                = 0
	X_SYS_UCONTEXT_H_             = 0
	X_UC_ARM_VFP                  = 0x00010000
	X_UC_CLRSTACK                 = 0x00040000
	X_UC_CPU                      = 0x04
	X_UC_FPU                      = 0x08
	X_UC_MACHINE_PAD              = 1
	X_UC_MD                       = 0x400f0020
	X_UC_SETSTACK                 = 0x00020000
	X_UC_SIGMASK                  = 0x01
	X_UC_STACK                    = 0x02
	X_UC_TLSBASE                  = 0x00080000
	X_UC_UCONTEXT_ALIGN           = -1
)

type Ptrdiff_t = int32

type Size_t = uint32

type Wchar_t = int32

type X__builtin_va_list = uintptr
type X__float128 = float64

type X__int8_t = int8
type X__uint8_t = uint8
type X__int16_t = int16
type X__uint16_t = uint16
type X__int32_t = int32
type X__uint32_t = uint32
type X__int64_t = int64
type X__uint64_t = uint64

type X__intptr_t = int32
type X__uintptr_t = uint32

type X__cpu_simple_lock_nv_t = int32
type X__register_t = int32

type X__caddr_t = uintptr
type X__gid_t = X__uint32_t
type X__in_addr_t = X__uint32_t
type X__in_port_t = X__uint16_t
type X__mode_t = X__uint32_t
type X__off_t = X__int64_t
type X__pid_t = X__int32_t
type X__sa_family_t = X__uint8_t
type X__socklen_t = uint32
type X__uid_t = X__uint32_t
type X__fsblkcnt_t = X__uint64_t
type X__fsfilcnt_t = X__uint64_t
type X__wctrans_t = uintptr
type X__wctype_t = uintptr

type X__mbstate_t = struct {
	F__mbstateL  X__int64_t
	F__ccgo_pad1 [120]byte
}

type X__va_list = X__builtin_va_list

type Int8_t = X__int8_t

type Uint8_t = X__uint8_t

type Int16_t = X__int16_t

type Uint16_t = X__uint16_t

type Int32_t = X__int32_t

type Uint32_t = X__uint32_t

type Int64_t = X__int64_t

type Uint64_t = X__uint64_t

type U_int8_t = Uint8_t
type U_int16_t = Uint16_t
type U_int32_t = Uint32_t
type U_int64_t = Uint64_t

type In_addr_t = X__in_addr_t

type In_port_t = X__in_port_t

type Intptr_t = X__intptr_t

type Uintptr_t = X__uintptr_t

type Int_least8_t = int8
type Uint_least8_t = uint8
type Int_least16_t = int16
type Uint_least16_t = uint16
type Int_least32_t = int32
type Uint_least32_t = uint32
type Int_least64_t = int64
type Uint_least64_t = uint64

type Int_fast8_t = int32
type Uint_fast8_t = uint32
type Int_fast16_t = int32
type Uint_fast16_t = uint32
type Int_fast32_t = int32
type Uint_fast32_t = uint32
type Int_fast64_t = int64
type Uint_fast64_t = uint64

type Intmax_t = int64
type Uintmax_t = uint64

type U_char = uint8
type U_short = uint16
type U_int = uint32
type U_long = uint32

type Unchar = uint8
type Ushort = uint16
type Uint = uint32
type Ulong = uint32

type U_quad_t = Uint64_t
type Quad_t = Int64_t
type Qaddr_t = uintptr

type Longlong_t = Int64_t
type U_longlong_t = Uint64_t

type Blkcnt_t = Int64_t
type Blksize_t = Int32_t

type Fsblkcnt_t = X__fsblkcnt_t

type Fsfilcnt_t = X__fsfilcnt_t

type Caddr_t = X__caddr_t

type Daddr_t = Int64_t

type Dev_t = Uint64_t
type Fixpt_t = Uint32_t

type Gid_t = X__gid_t

type Id_t = Uint32_t
type Ino_t = Uint64_t
type Key_t = int32

type Mode_t = X__mode_t

type Nlink_t = Uint32_t

type Off_t = X__off_t

type Pid_t = X__pid_t
type Lwpid_t = Int32_t
type Rlim_t = Uint64_t
type Segsz_t = Int32_t
type Swblk_t = Int32_t

type Uid_t = X__uid_t

type Mqd_t = int32

type Cpuid_t = uint32

type Psetid_t = int32

type X__cpu_simple_lock_t = X__cpu_simple_lock_nv_t

type X__devmajor_t = Int32_t
type X__devminor_t = Int32_t

type Clock_t = uint32

type Ssize_t = int32

type Time_t = X__int64_t

type Clockid_t = int32

type Timer_t = int32

type Suseconds_t = int32

type Useconds_t = uint32

type X__fd_mask = X__uint32_t

type Fd_set1 = struct{ Ffds_bits [8]X__fd_mask }

type Fd_set = Fd_set1

type Kauth_cred_t = uintptr

type Pri_t = int32

type Pthread_spin_t = X__cpu_simple_lock_t
type X__pthread_spin_t = Pthread_spin_t

type Pthread_queue_struct_t = struct {
	Fptqh_first uintptr
	Fptqh_last  uintptr
}

type Pthread_queue_t = Pthread_queue_struct_t
type X__pthread_attr_st = struct {
	Fpta_magic   uint32
	Fpta_flags   int32
	Fpta_private uintptr
}

type X__pthread_mutex_st = struct {
	Fptm_magic      uint32
	Fptm_errorcheck X__pthread_spin_t
	F__8            struct {
		F__ccgo_pad1 [0]uint32
		Fptm_ceiling uint8
		F__ccgo_pad2 [3]byte
	}
	Fptm_owner    Pthread_t
	Fptm_waiters  uintptr
	Fptm_recursed uint32
	Fptm_spare2   uintptr
}

type X__pthread_mutexattr_st = struct {
	Fptma_magic   uint32
	Fptma_private uintptr
}

type X__pthread_cond_st = struct {
	Fptc_magic   uint32
	Fptc_lock    X__pthread_spin_t
	Fptc_waiters Pthread_queue_t
	Fptc_mutex   uintptr
	Fptc_private uintptr
}

type X__pthread_condattr_st = struct {
	Fptca_magic   uint32
	Fptca_private uintptr
}

type X__pthread_rwlock_st = struct {
	Fptr_magic     uint32
	Fptr_interlock X__pthread_spin_t
	Fptr_rblocked  Pthread_queue_t
	Fptr_wblocked  Pthread_queue_t
	Fptr_nreaders  uint32
	Fptr_owner     Pthread_t
	Fptr_private   uintptr
}

type X__pthread_rwlockattr_st = struct {
	Fptra_magic   uint32
	Fptra_private uintptr
}

type X__pthread_barrier_st = struct {
	Fptb_magic      uint32
	Fptb_lock       Pthread_spin_t
	Fptb_waiters    Pthread_queue_t
	Fptb_initcount  uint32
	Fptb_curcount   uint32
	Fptb_generation uint32
	Fptb_private    uintptr
}

type X__pthread_barrierattr_st = struct {
	Fptba_magic   uint32
	Fptba_private uintptr
}

type Pthread_t = uintptr
type Pthread_attr_t = X__pthread_attr_st
type Pthread_mutex_t = X__pthread_mutex_st
type Pthread_mutexattr_t = X__pthread_mutexattr_st
type Pthread_cond_t = X__pthread_cond_st
type Pthread_condattr_t = X__pthread_condattr_st
type X__pthread_once_st = struct {
	Fpto_mutex Pthread_mutex_t
	Fpto_done  int32
}

type Pthread_once_t = X__pthread_once_st
type X__pthread_spinlock_st = struct {
	Fpts_magic uint32
	Fpts_spin  X__pthread_spin_t
	Fpts_flags int32
}

type Pthread_spinlock_t = X__pthread_spinlock_st
type Pthread_rwlock_t = X__pthread_rwlock_st
type Pthread_rwlockattr_t = X__pthread_rwlockattr_st
type Pthread_barrier_t = X__pthread_barrier_st
type Pthread_barrierattr_t = X__pthread_barrierattr_st
type Pthread_key_t = int32

type Sigset_t = struct{ F__bits [4]X__uint32_t }

type Sigaltstack = struct {
	Fss_sp    uintptr
	Fss_size  Size_t
	Fss_flags int32
}

type Stack_t = Sigaltstack

type Sig_atomic_t = int32

type Sigcontext = struct {
	Fsc_onstack  int32
	F__sc_mask13 int32
	Fsc_spsr     uint32
	Fsc_r0       uint32
	Fsc_r1       uint32
	Fsc_r2       uint32
	Fsc_r3       uint32
	Fsc_r4       uint32
	Fsc_r5       uint32
	Fsc_r6       uint32
	Fsc_r7       uint32
	Fsc_r8       uint32
	Fsc_r9       uint32
	Fsc_r10      uint32
	Fsc_r11      uint32
	Fsc_r12      uint32
	Fsc_usr_sp   uint32
	Fsc_usr_lr   uint32
	Fsc_svc_lr   uint32
	Fsc_pc       uint32
	Fsc_mask     Sigset_t
}

type Sigval = struct{ Fsival_int int32 }

type Sigval_t = Sigval

type X_ksiginfo = struct {
	F_signo      int32
	F_code       int32
	F_errno      int32
	F__ccgo_pad1 [4]byte
	F_reason     struct {
		F__ccgo_pad1 [0]uint64
		F_rt         struct {
			F_pid   X__pid_t
			F_uid   X__uid_t
			F_value Sigval_t
		}
		F__ccgo_pad2 [68]byte
	}
}

type Siginfo = struct {
	F__ccgo_pad1 [0]uint64
	Fsi_pad      [128]uint8
}

type Siginfo_t = Siginfo

type X__greg_t = uint32

type X__gregset_t = [17]X__greg_t

type X__fpregset_t = struct {
	F__fp_fpsr uint32
	F__fp_fr   [8]struct {
		F__fp_exponent    uint32
		F__fp_mantissa_hi uint32
		F__fp_mantissa_lo uint32
	}
}

type X__vfpregset_t = struct {
	F__vfp_fpscr uint32
	F__ccgo_pad1 [4]byte
	F__vfp_fstmx [32]Uint64_t
	F__vfp_fpsid uint32
	F__ccgo_pad2 [4]byte
}

type Mcontext_t = struct {
	F__gregs     X__gregset_t
	F__ccgo_pad1 [4]byte
	F__fpu       struct {
		F__ccgo_pad1 [0]uint64
		F__fpregs    X__fpregset_t
		F__ccgo_pad2 [172]byte
	}
	F_mc_tlsbase   X__greg_t
	F_mc_user_tpid X__greg_t
}
type Mcontext32_t = struct {
	F__gregs     X__gregset_t
	F__ccgo_pad1 [4]byte
	F__fpu       struct {
		F__ccgo_pad1 [0]uint64
		F__fpregs    X__fpregset_t
		F__ccgo_pad2 [172]byte
	}
	F_mc_tlsbase   X__greg_t
	F_mc_user_tpid X__greg_t
}

type X__ucontext = struct {
	Fuc_flags    uint32
	Fuc_link     uintptr
	Fuc_sigmask  Sigset_t
	Fuc_stack    Stack_t
	F__ccgo_pad1 [4]byte
	Fuc_mcontext Mcontext_t
	F__uc_pad    [1]int32
	F__ccgo_pad2 [4]byte
}

type Ucontext_t = X__ucontext

type Sigaction = struct {
	F_sa_u    struct{ F_sa_handler uintptr }
	Fsa_mask  Sigset_t
	Fsa_flags int32
}

type Sig_t = uintptr

type Sigstack = struct {
	Fss_sp      uintptr
	Fss_onstack int32
}

type Sigevent = struct {
	Fsigev_notify            int32
	Fsigev_signo             int32
	Fsigev_value             struct{ Fsival_int int32 }
	Fsigev_notify_function   uintptr
	Fsigev_notify_attributes uintptr
}

type Timespec = struct {
	Ftv_sec      Time_t
	Ftv_nsec     int32
	F__ccgo_pad1 [4]byte
}

var _ uint8
