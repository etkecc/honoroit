// Code generated by 'ccgo stdio/gen.c -crt-import-path "" -export-defines "" -export-enums "" -export-externs X -export-fields F -export-structs "" -export-typedefs "" -header -hide _OSSwapInt16,_OSSwapInt32,_OSSwapInt64 -ignore-unsupported-alignment -o stdio/stdio_netbsd_arm.go -pkgname stdio', DO NOT EDIT.

package stdio

import (
	"math"
	"reflect"
	"sync/atomic"
	"unsafe"
)

var _ = math.Pi
var _ reflect.Kind
var _ atomic.Value
var _ unsafe.Pointer

const (
	BUFSIZ                    = 1024
	EOF                       = -1
	FILENAME_MAX              = 1024
	FOPEN_MAX                 = 20
	FPARSELN_UNESCALL         = 0x0f
	FPARSELN_UNESCCOMM        = 0x04
	FPARSELN_UNESCCONT        = 0x02
	FPARSELN_UNESCESC         = 0x01
	FPARSELN_UNESCREST        = 0x08
	L_ctermid                 = 1024
	L_cuserid                 = 9
	L_tmpnam                  = 1024
	P_tmpdir                  = "/tmp/"
	SEEK_CUR                  = 1
	SEEK_END                  = 2
	SEEK_SET                  = 0
	TMP_MAX                   = 308915776
	X_ARM_ARCH_4T             = 0
	X_ARM_ARCH_5              = 0
	X_ARM_ARCH_5T             = 0
	X_ARM_ARCH_6              = 0
	X_ARM_ARCH_7              = 0
	X_ARM_ARCH_DWORD_OK       = 0
	X_ARM_ARCH_T2             = 0
	X_ARM_CDEFS_H_            = 0
	X_ARM_INT_TYPES_H_        = 0
	X_FILE_OFFSET_BITS        = 64
	X_FSTDIO                  = 0
	X_IOFBF                   = 0
	X_IOLBF                   = 1
	X_IONBF                   = 2
	X_NETBSD_SOURCE           = 1
	X_STDIO_H_                = 0
	X_SYS_ANSI_H_             = 0
	X_SYS_CDEFS_ELF_H_        = 0
	X_SYS_CDEFS_H_            = 0
	X_SYS_COMMON_ANSI_H_      = 0
	X_SYS_COMMON_INT_TYPES_H_ = 0
	X_SYS_NULL_H_             = 0
)

type Ptrdiff_t = int32

type Size_t = uint32

type Wchar_t = int32

type X__builtin_va_list = uintptr
type X__float128 = float64

type X__int8_t = int8
type X__uint8_t = uint8
type X__int16_t = int16
type X__uint16_t = uint16
type X__int32_t = int32
type X__uint32_t = uint32
type X__int64_t = int64
type X__uint64_t = uint64

type X__intptr_t = int32
type X__uintptr_t = uint32

type X__caddr_t = uintptr
type X__gid_t = X__uint32_t
type X__in_addr_t = X__uint32_t
type X__in_port_t = X__uint16_t
type X__mode_t = X__uint32_t
type X__off_t = X__int64_t
type X__pid_t = X__int32_t
type X__sa_family_t = X__uint8_t
type X__socklen_t = uint32
type X__uid_t = X__uint32_t
type X__fsblkcnt_t = X__uint64_t
type X__fsfilcnt_t = X__uint64_t
type X__wctrans_t = uintptr
type X__wctype_t = uintptr

type X__mbstate_t = struct {
	F__mbstateL  X__int64_t
	F__ccgo_pad1 [120]byte
}

type X__va_list = X__builtin_va_list
type Ssize_t = int32

type X__sfpos = struct {
	F_pos         X__off_t
	F_mbstate_in  X__mbstate_t
	F_mbstate_out X__mbstate_t
}

type Fpos_t = X__sfpos

type X__sbuf = struct {
	F_base uintptr
	F_size int32
}

type X__sFILE = struct {
	F_p     uintptr
	F_r     int32
	F_w     int32
	F_flags uint16
	F_file  int16
	F_bf    struct {
		F_base uintptr
		F_size int32
	}
	F_lbfsize int32
	F_cookie  uintptr
	F_close   uintptr
	F_read    uintptr
	F_seek    uintptr
	F_write   uintptr
	F_ext     struct {
		F_base uintptr
		F_size int32
	}
	F_up        uintptr
	F_ur        int32
	F_ubuf      [3]uint8
	F_nbuf      [1]uint8
	F_flush     uintptr
	F_lb_unused [4]uint8
	F_blksize   int32
	F_offset    X__off_t
}

type FILE = X__sFILE

type Off_t = X__off_t

type Locale_t = uintptr

var _ uint8
