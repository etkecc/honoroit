// Code generated by 'ccgo wctype/gen.c -crt-import-path "" -export-defines "" -export-enums "" -export-externs X -export-fields F -export-structs "" -export-typedefs "" -header -hide _OSSwapInt16,_OSSwapInt32,_OSSwapInt64 -ignore-unsupported-alignment -o wctype/wctype_netbsd_arm.go -pkgname wctype', DO NOT EDIT.

package wctype

import (
	"math"
	"reflect"
	"sync/atomic"
	"unsafe"
)

var _ = math.Pi
var _ reflect.Kind
var _ atomic.Value
var _ unsafe.Pointer

const (
	X_ARM_ARCH_4T             = 0
	X_ARM_ARCH_5              = 0
	X_ARM_ARCH_5T             = 0
	X_ARM_ARCH_6              = 0
	X_ARM_ARCH_7              = 0
	X_ARM_ARCH_DWORD_OK       = 0
	X_ARM_ARCH_T2             = 0
	X_ARM_CDEFS_H_            = 0
	X_ARM_INT_TYPES_H_        = 0
	X_FILE_OFFSET_BITS        = 64
	X_NETBSD_SOURCE           = 1
	X_SYS_ANSI_H_             = 0
	X_SYS_CDEFS_ELF_H_        = 0
	X_SYS_CDEFS_H_            = 0
	X_SYS_COMMON_ANSI_H_      = 0
	X_SYS_COMMON_INT_TYPES_H_ = 0
	X_WCTYPE_H_               = 0
)

type Ptrdiff_t = int32

type Size_t = uint32

type Wchar_t = int32

type X__builtin_va_list = uintptr
type X__float128 = float64

type X__int8_t = int8
type X__uint8_t = uint8
type X__int16_t = int16
type X__uint16_t = uint16
type X__int32_t = int32
type X__uint32_t = uint32
type X__int64_t = int64
type X__uint64_t = uint64

type X__intptr_t = int32
type X__uintptr_t = uint32

type X__caddr_t = uintptr
type X__gid_t = X__uint32_t
type X__in_addr_t = X__uint32_t
type X__in_port_t = X__uint16_t
type X__mode_t = X__uint32_t
type X__off_t = X__int64_t
type X__pid_t = X__int32_t
type X__sa_family_t = X__uint8_t
type X__socklen_t = uint32
type X__uid_t = X__uint32_t
type X__fsblkcnt_t = X__uint64_t
type X__fsfilcnt_t = X__uint64_t
type X__wctrans_t = uintptr
type X__wctype_t = uintptr

type X__mbstate_t = struct {
	F__mbstateL  X__int64_t
	F__ccgo_pad1 [120]byte
}

type X__va_list = X__builtin_va_list

type Wint_t = int32

type Wctrans_t = X__wctrans_t

type Wctype_t = X__wctype_t

type Locale_t = uintptr

var _ uint8
